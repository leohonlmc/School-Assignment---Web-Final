Student Name: Hon Ming Chun
Student ID: 301250853
Program: COMP-213
Section: Individual Project




<html>
  <head>
    <link rel="stylesheet" href="style-house.css" />
    <link rel="icon" type="image/x-icon" href="icon.jpeg" />
  </head>
  <body>
    <a href="index.html">
      <div class="header">
        <img src="icon.svg" width="30%" height="100%" alt="" />
      </div>
    </a>


    <div class="headerMenu">
      <a class="headerBar" href="index.html#mission">
        <div class="headerItem">Our Mission</div></a
      >
      <a class="headerBar" href="index.html#customer-feedback">
        <div class="headerItem">Customer Feedback</div></a
      >
      <a class="headerBar" href="houses.html"
        ><div class="headerItem">Properties for sale!</div></a
      >
      <a class="headerBar" href="Credits.html"
        ><div class="headerItem">Site Map and Credits</div></a
      >
    </div>


    <h2 style="text-align: center">Tell us what you're looking for!</h2>


    <div class="cs-form">
      <form
        action="mailto:mhon5@my.centennialcollege.ca
      "
        method="get"
        enctype="text/plain"
      >
        <table>
          <tr>
            <td><label for="firstName">First Name:</label></td>
            <td><input id="firstName" type="text" minlength="4" /></td>
          </tr>
          <tr>
            <td><label for="LastName">Last Name:</label></td>
            <td><input id="LastName" type="text" minlength="4" /></td>
          </tr>
          <tr>
            <td><label for="phone">Phone:</label></td>
            <td><input id="phone" type="text" minlength="4" /></td>
          </tr>
          <tr>
            <td><label for="Email">Email:</label></td>
            <td><input id="Email" type="email" minlength="4" /></td>
          </tr>


          <tr>
            <td><label for="types">Types of property:</label></td>
            <td>
              <input id="types" type="radio" name="property" /> House
              <input id="types" type="radio" name="property" />Condominium
            </td>
          </tr>
          <tr>
            <td><label for="bedroom">Numbers of bedroom:</label></td>
            <td>
              <input
                id="bedroom"
                type="number"
                oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);"
                maxlength="4"
              />
            </td>
          </tr>
          <tr>
            <td><label for="bedroom">Numbers of bathroom:</label></td>
            <td>
              <input
                id="bathroom"
                type="number"
                oninput="javascript: if (this.value.length > this.maxLength) this.value = this.value.slice(0, this.maxLength);"
                maxlength="4"
              />
            </td>
          </tr>
        </table>


        <div class="range_container">
          <div class="sliders_control">
            <input
              id="fromSlider"
              type="range"
              value="0"
              min="0"
              max="100000"
            />
            <input
              id="toSlider"
              type="range"
              value="1000000"
              min="0"
              max="1000000"
            />
          </div>
          <div class="form_control">
            <div class="form_control_container">
              <div class="form_control_container__time">Min</div>
              <input
                class="form_control_container__time__input"
                type="number"
                id="fromInput"
                value="100000"
                min="100000"
                max="1000000"
              />
            </div>
            <div class="form_control_container">
              <div class="form_control_container__time">Max</div>
              <input
                class="form_control_container__time__input"
                type="number"
                id="toInput"
                value="1000000"
                min="0"
                max="1000000"
              />
            </div>
          </div>
        </div>
        <div class="comment">
          <textarea
            name="comment"
            id=""
            cols="30"
            rows="10"
            placeholder="Let me know your opinion..."
          ></textarea>
        </div>


        <div class="btns">
          <input class="submit" type="submit" value="send" />
          <input class="reset" type="reset" />
        </div>
      </form>
    </div>


    <script>
      function controlFromInput(fromSlider, fromInput, toInput, controlSlider) {
        const [from, to] = getParsed(fromInput, toInput);
        fillSlider(fromInput, toInput, "#C6C6C6", "#25daa5", controlSlider);
        if (from > to) {
          fromSlider.value = to;
          fromInput.value = to;
        } else {
          fromSlider.value = from;
        }
      }


      function controlToInput(toSlider, fromInput, toInput, controlSlider) {
        const [from, to] = getParsed(fromInput, toInput);
        fillSlider(fromInput, toInput, "#C6C6C6", "#25daa5", controlSlider);
        setToggleAccessible(toInput);
        if (from <= to) {
          toSlider.value = to;
          toInput.value = to;
        } else {
          toInput.value = from;
        }
      }


      function controlFromSlider(fromSlider, toSlider, fromInput) {
        const [from, to] = getParsed(fromSlider, toSlider);
        fillSlider(fromSlider, toSlider, "#C6C6C6", "#25daa5", toSlider);
        if (from > to) {
          fromSlider.value = to;
          fromInput.value = to;
        } else {
          fromInput.value = from;
        }
      }


      function controlToSlider(fromSlider, toSlider, toInput) {
        const [from, to] = getParsed(fromSlider, toSlider);
        fillSlider(fromSlider, toSlider, "#C6C6C6", "#25daa5", toSlider);
        setToggleAccessible(toSlider);
        if (from <= to) {
          toSlider.value = to;
          toInput.value = to;
        } else {
          toInput.value = from;
          toSlider.value = from;
        }
      }


      function getParsed(currentFrom, currentTo) {
        const from = parseInt(currentFrom.value, 10);
        const to = parseInt(currentTo.value, 10);
        return [from, to];
      }


      function fillSlider(from, to, sliderColor, rangeColor, controlSlider) {
        const rangeDistance = to.max - to.min;
        const fromPosition = from.value - to.min;
        const toPosition = to.value - to.min;
        controlSlider.style.background = `linear-gradient(
              to right,
              ${sliderColor} 0%,
              ${sliderColor} ${(fromPosition / rangeDistance) * 100}%,
              ${rangeColor} ${(fromPosition / rangeDistance) * 100}%,
              ${rangeColor} ${(toPosition / rangeDistance) * 100}%, 
              ${sliderColor} ${(toPosition / rangeDistance) * 100}%, 
              ${sliderColor} 100%)`;
      }


      function setToggleAccessible(currentTarget) {
        const toSlider = document.querySelector("#toSlider");
        if (Number(currentTarget.value) <= 0) {
          toSlider.style.zIndex = 2;
        } else {
          toSlider.style.zIndex = 0;
        }
      }


      const fromSlider = document.querySelector("#fromSlider");
      const toSlider = document.querySelector("#toSlider");
      const fromInput = document.querySelector("#fromInput");
      const toInput = document.querySelector("#toInput");
      fillSlider(fromSlider, toSlider, "#C6C6C6", "#25daa5", toSlider);
      setToggleAccessible(toSlider);


      fromSlider.oninput = () =>
        controlFromSlider(fromSlider, toSlider, fromInput);
      toSlider.oninput = () => controlToSlider(fromSlider, toSlider, toInput);
      fromInput.oninput = () =>
        controlFromInput(fromSlider, fromInput, toInput, toSlider);
      toInput.oninput = () =>
        controlToInput(toSlider, fromInput, toInput, toSlider);
    </script>
  </body>
</html>